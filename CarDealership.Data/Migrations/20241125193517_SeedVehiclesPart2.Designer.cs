// <auto-generated />
using System;
using CarDealership.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarDealership.Data.Migrations
{
    [DbContext(typeof(DealershipDbContext))]
    [Migration("20241125193517_SeedVehiclesPart2")]
    partial class SeedVehiclesPart2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CarDealership.Data.Models.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("CarDealership.Data.Models.Location", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("481446db-018e-49e3-8c49-9d9d9d20b90b"),
                            Name = "София"
                        },
                        new
                        {
                            Id = new Guid("9b52103f-9663-478f-a565-31ee81651a72"),
                            Name = "Пловдив"
                        },
                        new
                        {
                            Id = new Guid("383627b4-568d-41bc-8410-987d015c2d0c"),
                            Name = "Варна"
                        },
                        new
                        {
                            Id = new Guid("541de453-3b80-43a9-9f88-0a816b5ffedf"),
                            Name = "Плевен"
                        },
                        new
                        {
                            Id = new Guid("6ab979e8-96f5-460b-87ef-cef719d28979"),
                            Name = "Бургас"
                        });
                });

            modelBuilder.Entity("CarDealership.Data.Models.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Cubage")
                        .HasMaxLength(6000)
                        .HasColumnType("int");

                    b.Property<int>("Doors")
                        .HasMaxLength(5)
                        .HasColumnType("int");

                    b.Property<string>("FuelType")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("GearBox")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<int>("HorsePower")
                        .HasMaxLength(800)
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("PurposeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Seats")
                        .HasMaxLength(7)
                        .HasColumnType("int");

                    b.Property<int>("TankCapacity")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.Property<Guid>("TypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("LocationId");

                    b.HasIndex("PurposeId");

                    b.HasIndex("TypeId");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e991d671-419a-44df-a608-587fa101b229"),
                            CategoryId = new Guid("247c145d-9b6d-4315-a68a-f8191b687429"),
                            Cubage = 2000,
                            Doors = 4,
                            FuelType = "Дизел",
                            GearBox = "Ръчна",
                            HorsePower = 130,
                            ImageUrl = "https://images.clickdealer.co.uk/vehicles/4175/4175102/large2/92193323.jpg",
                            IsDeleted = false,
                            LocationId = new Guid("ae187b67-abd1-4c1a-8590-6a22c6de4b17"),
                            Make = "Ford",
                            Model = "Transit",
                            Price = 27000m,
                            PurposeId = new Guid("661d2044-185a-4911-8864-1285c0638e09"),
                            Seats = 3,
                            TankCapacity = 90,
                            TypeId = new Guid("8f40d349-c104-430e-81d4-ab1ba6390187"),
                            Year = "2019"
                        },
                        new
                        {
                            Id = new Guid("e6a35b61-f23a-497c-ae74-e7ebff1c9be0"),
                            CategoryId = new Guid("5e2e101c-27c9-4b94-b2e8-8f2154a4389b"),
                            Cubage = 13000,
                            Doors = 2,
                            FuelType = "Дизел",
                            GearBox = "Автоматична",
                            HorsePower = 480,
                            ImageUrl = "https://www.truck1.bg/img/Vlekach_DAF_XF_480_FT_EURO_6_ADR-xxl-8235/8235_5044513319890.jpg",
                            IsDeleted = false,
                            LocationId = new Guid("84a3dfe2-4c08-4e18-9156-7452e556c1dd"),
                            Make = "Daf",
                            Model = "XF 408",
                            Price = 88999m,
                            PurposeId = new Guid("661d2044-185a-4911-8864-1285c0638e09"),
                            Seats = 2,
                            TankCapacity = 1200,
                            TypeId = new Guid("f7fa7488-e482-493d-a27c-1f1a7d38f79b"),
                            Year = "2020"
                        },
                        new
                        {
                            Id = new Guid("a2031693-939a-4d73-b619-8a8fd5797e05"),
                            CategoryId = new Guid("2fc4c7e6-cad0-4190-95b5-78a7420a1631"),
                            Cubage = 2200,
                            Doors = 4,
                            FuelType = "Дизел",
                            GearBox = "Ръчка",
                            HorsePower = 150,
                            ImageUrl = "https://abstoragev4.blob.core.windows.net/auctions/39678/cars/medium/39678-1_ex.jpg",
                            IsDeleted = false,
                            LocationId = new Guid("48141d40-a443-4edf-aa93-80a12db8690e"),
                            Make = "Ford",
                            Model = "Ranger",
                            Price = 27000m,
                            PurposeId = new Guid("661d2044-185a-4911-8864-1285c0638e09"),
                            Seats = 5,
                            TankCapacity = 80,
                            TypeId = new Guid("912d4786-5ce9-4dc7-8da8-47ce8fb72bef"),
                            Year = "2012"
                        },
                        new
                        {
                            Id = new Guid("37fc7112-66de-4be0-ab16-5d7c77d04606"),
                            CategoryId = new Guid("d5b9e746-1458-4c71-98a2-dd2962c8f694"),
                            Cubage = 1600,
                            Doors = 2,
                            FuelType = "Дизел",
                            GearBox = "Ръчна",
                            HorsePower = 92,
                            ImageUrl = "https://wallpapers.com/images/hd/caption-stylish-citroen-berlingoonthe-//open-road-r6rrgptqhdh95zwh.jpg",
                            IsDeleted = false,
                            LocationId = new Guid("95d16d5b-0edb-46ed-9abc-822545a05860"),
                            Make = "Citroen",
                            Model = "Berlingo",
                            Price = 9000m,
                            PurposeId = new Guid("8acdd8a8-ffaa-425d-934e-d13deaea1836"),
                            Seats = 2,
                            TankCapacity = 60,
                            TypeId = new Guid("912d4786-5ce9-4dc7-8da8-47ce8fb72bef"),
                            Year = "2014"
                        },
                        new
                        {
                            Id = new Guid("3fbce59b-a6b9-42c4-bd47-1f11694c193d"),
                            CategoryId = new Guid("4012cbab-8211-4c37-8566-f73f083e999f"),
                            Cubage = 2000,
                            Doors = 4,
                            FuelType = "Бензин",
                            GearBox = "Автоматична",
                            HorsePower = 210,
                            ImageUrl = "https://images.clickdealer.co.uk/vehicles/3303/3303862/large2/69922594.jpg",
                            IsDeleted = false,
                            LocationId = new Guid("3cb2b945-5fb2-4489-805e-b879154902a6"),
                            Make = "Audi",
                            Model = "A4",
                            Price = 1100m,
                            PurposeId = new Guid("8acdd8a8-ffaa-425d-934e-d13deaea1836"),
                            Seats = 5,
                            TankCapacity = 70,
                            TypeId = new Guid("912d4786-5ce9-4dc7-8da8-47ce8fb72bef"),
                            Year = "2010"
                        },
                        new
                        {
                            Id = new Guid("cc71fae8-9d50-4541-8d4b-285b3fc6ca98"),
                            CategoryId = new Guid("d5b9e746-1458-4c71-98a2-dd2962c8f694"),
                            Cubage = 1600,
                            Doors = 2,
                            FuelType = "Дизел",
                            GearBox = "Ръчна",
                            HorsePower = 92,
                            ImageUrl = "https://media.drive.com.au/obj/tx_q:50,rs:auto:1920:1080:1/caradvice/private/4d113513f8e3801b4248fda3c2517c04",
                            IsDeleted = false,
                            LocationId = new Guid("ae187b67-abd1-4c1a-8590-6a22c6de4b17"),
                            Make = "Citroen",
                            Model = "Berlingo",
                            Price = 9000m,
                            PurposeId = new Guid("8acdd8a8-ffaa-425d-934e-d13deaea1836"),
                            Seats = 2,
                            TankCapacity = 60,
                            TypeId = new Guid("912d4786-5ce9-4dc7-8da8-47ce8fb72bef"),
                            Year = "2014"
                        },
                        new
                        {
                            Id = new Guid("38653d82-bd5b-4a3e-b973-510fa121a9ae"),
                            CategoryId = new Guid("2fc4c7e6-cad0-4190-95b5-78a7420a1631"),
                            Cubage = 1000,
                            Doors = 4,
                            FuelType = "Бензин",
                            GearBox = "Автоматична",
                            HorsePower = 90,
                            ImageUrl = "https://img-pa.auto1.com/img53/7a/537a451e1e8592af996df6d02497ae30/pa/FZ44914_961889bcd6782481a45aec95c890dda7.jpeg",
                            IsDeleted = false,
                            LocationId = new Guid("84a3dfe2-4c08-4e18-9156-7452e556c1dd"),
                            Make = "Dacia",
                            Model = "Sandero",
                            Price = 16000m,
                            PurposeId = new Guid("f140b03d-b93a-47e6-a58a-346fad8599ad"),
                            Seats = 5,
                            TankCapacity = 60,
                            TypeId = new Guid("912d4786-5ce9-4dc7-8da8-47ce8fb72bef"),
                            Year = "2018"
                        },
                        new
                        {
                            Id = new Guid("c54d611b-c559-4468-9782-3b6a34d139e6"),
                            CategoryId = new Guid("4012cbab-8211-4c37-8566-f73f083e999f"),
                            Cubage = 3000,
                            Doors = 4,
                            FuelType = "Дизел",
                            GearBox = "Автоматична",
                            HorsePower = 244,
                            ImageUrl = "https://www.motorbeam.com/wp-content/uploads/Jaguar-XF-Diesel-Review-1200x900.jpg",
                            IsDeleted = false,
                            LocationId = new Guid("48141d40-a443-4edf-aa93-80a12db8690e"),
                            Make = "Jaguar",
                            Model = "XF",
                            Price = 23500m,
                            PurposeId = new Guid("8acdd8a8-ffaa-425d-934e-d13deaea1836"),
                            Seats = 5,
                            TankCapacity = 80,
                            TypeId = new Guid("912d4786-5ce9-4dc7-8da8-47ce8fb72bef"),
                            Year = "2018"
                        },
                        new
                        {
                            Id = new Guid("6abf743a-068b-404d-94ee-65c2d37c9884"),
                            CategoryId = new Guid("2fc4c7e6-cad0-4190-95b5-78a7420a1631"),
                            Cubage = 2200,
                            Doors = 4,
                            FuelType = "Дизел",
                            GearBox = "Ръчна",
                            HorsePower = 150,
                            ImageUrl = "https://media.ed.edmunds-media.com/honda/cr-v/2015/oem/2015_honda_cr-v_4dr-suv_touring_fq_oem_1_1600.jpg",
                            IsDeleted = false,
                            LocationId = new Guid("95d16d5b-0edb-46ed-9abc-822545a05860"),
                            Make = "Honda",
                            Model = "Cr-v",
                            Price = 24500m,
                            PurposeId = new Guid("8acdd8a8-ffaa-425d-934e-d13deaea1836"),
                            Seats = 5,
                            TankCapacity = 70,
                            TypeId = new Guid("912d4786-5ce9-4dc7-8da8-47ce8fb72bef"),
                            Year = "2015"
                        },
                        new
                        {
                            Id = new Guid("704fc770-11e6-498a-875f-5cb8afdbc95f"),
                            CategoryId = new Guid("d5b9e746-1458-4c71-98a2-dd2962c8f694"),
                            Cubage = 1700,
                            Doors = 4,
                            FuelType = "Дизел",
                            GearBox = "Ръчна",
                            HorsePower = 75,
                            ImageUrl = "https://img.autoabc.lv/opel-meriva/opel-meriva_2003_Minivens_1512150409_4.jpg",
                            IsDeleted = false,
                            LocationId = new Guid("3cb2b945-5fb2-4489-805e-b879154902a6"),
                            Make = "Opel",
                            Model = "Meriva",
                            Price = 2500m,
                            PurposeId = new Guid("f140b03d-b93a-47e6-a58a-346fad8599ad"),
                            Seats = 5,
                            TankCapacity = 60,
                            TypeId = new Guid("912d4786-5ce9-4dc7-8da8-47ce8fb72bef"),
                            Year = "2004"
                        },
                        new
                        {
                            Id = new Guid("2004fde6-f433-493b-88ca-dde6e0d65706"),
                            CategoryId = new Guid("939d5a93-8d55-4ec3-b3ac-39a36cd1ff29"),
                            Cubage = 2000,
                            Doors = 4,
                            FuelType = "Дизел",
                            GearBox = "Автоматична",
                            HorsePower = 240,
                            ImageUrl = "https://lenkrad.bg/wp-content/uploads/2023/07/IMG_6052.jpg",
                            IsDeleted = false,
                            LocationId = new Guid("ae187b67-abd1-4c1a-8590-6a22c6de4b17"),
                            Make = "Volkswagen",
                            Model = "Passat",
                            Price = 35500m,
                            PurposeId = new Guid("8acdd8a8-ffaa-425d-934e-d13deaea1836"),
                            Seats = 5,
                            TankCapacity = 65,
                            TypeId = new Guid("912d4786-5ce9-4dc7-8da8-47ce8fb72bef"),
                            Year = "2020"
                        },
                        new
                        {
                            Id = new Guid("2fc5d4c8-702f-4fa5-a9e7-4d85a90228bd"),
                            CategoryId = new Guid("4012cbab-8211-4c37-8566-f73f083e999f"),
                            Cubage = 2000,
                            Doors = 4,
                            FuelType = "Дизел",
                            GearBox = "Автоматична",
                            HorsePower = 185,
                            ImageUrl = "https://i.iinfo.cz/images/379/C5-A0koda-Octavia-facelift-2017-v-Portugalsku-0001-orig.jpg",
                            IsDeleted = false,
                            LocationId = new Guid("84a3dfe2-4c08-4e18-9156-7452e556c1dd"),
                            Make = "Skoda",
                            Model = "Octavia",
                            Price = 22500m,
                            PurposeId = new Guid("f140b03d-b93a-47e6-a58a-346fad8599ad"),
                            Seats = 5,
                            TankCapacity = 60,
                            TypeId = new Guid("912d4786-5ce9-4dc7-8da8-47ce8fb72bef"),
                            Year = "2017"
                        },
                        new
                        {
                            Id = new Guid("b4d74e18-6399-4e1a-b418-fb18052cb5e2"),
                            CategoryId = new Guid("bd91bf4e-67a8-40b4-a992-ae31c76df3a1"),
                            Cubage = 2000,
                            Doors = 2,
                            FuelType = "Дизел",
                            GearBox = "Автоматична",
                            HorsePower = 136,
                            ImageUrl = "https://www.auto-data.net/images/f21/Peugeot-307-facelift-2005.jpg",
                            IsDeleted = false,
                            LocationId = new Guid("48141d40-a443-4edf-aa93-80a12db8690e"),
                            Make = "Peugeot",
                            Model = "307",
                            Price = 5500m,
                            PurposeId = new Guid("f140b03d-b93a-47e6-a58a-346fad8599ad"),
                            Seats = 4,
                            TankCapacity = 50,
                            TypeId = new Guid("912d4786-5ce9-4dc7-8da8-47ce8fb72bef"),
                            Year = "2009"
                        },
                        new
                        {
                            Id = new Guid("0abb1b1d-5ec2-44c9-b599-e8a7647fd81a"),
                            CategoryId = new Guid("2fc4c7e6-cad0-4190-95b5-78a7420a1631"),
                            Cubage = 1600,
                            Doors = 4,
                            FuelType = "Дизел",
                            GearBox = "Автоматична",
                            HorsePower = 130,
                            ImageUrl = "https://images.clickdealer.co.uk/vehicles/5611/5611012/large1/131132474.jpg",
                            IsDeleted = false,
                            LocationId = new Guid("95d16d5b-0edb-46ed-9abc-822545a05860"),
                            Make = "Renault",
                            Model = "Kadjar",
                            Price = 19500m,
                            PurposeId = new Guid("8acdd8a8-ffaa-425d-934e-d13deaea1836"),
                            Seats = 5,
                            TankCapacity = 65,
                            TypeId = new Guid("912d4786-5ce9-4dc7-8da8-47ce8fb72bef"),
                            Year = "2017"
                        },
                        new
                        {
                            Id = new Guid("2370e89c-7765-45ae-8efb-e5a70013b66b"),
                            CategoryId = new Guid("37545039-ea1a-4970-8a41-abe0005291fd"),
                            Cubage = 2000,
                            Doors = 2,
                            FuelType = "Дизел",
                            GearBox = "Автоматична",
                            HorsePower = 140,
                            ImageUrl = "https://www.motortrend.com/uploads/sites/5/2013/11/2013-Volkswagen-Scirocco-R-front-three-quarters1.jpg",
                            IsDeleted = false,
                            LocationId = new Guid("3cb2b945-5fb2-4489-805e-b879154902a6"),
                            Make = "Volkswagen",
                            Model = "Scirocco",
                            Price = 9500m,
                            PurposeId = new Guid("8acdd8a8-ffaa-425d-934e-d13deaea1836"),
                            Seats = 4,
                            TankCapacity = 55,
                            TypeId = new Guid("912d4786-5ce9-4dc7-8da8-47ce8fb72bef"),
                            Year = "2013"
                        },
                        new
                        {
                            Id = new Guid("00b87416-7414-4b06-a44f-62210845f836"),
                            CategoryId = new Guid("bd91bf4e-67a8-40b4-a992-ae31c76df3a1"),
                            Cubage = 1600,
                            Doors = 4,
                            FuelType = "Дизел",
                            GearBox = "Автоматична",
                            HorsePower = 110,
                            ImageUrl = "https://media.stockmanager.ie/media/0380e15958fbd2bb2c34655d332a20d1.jpg",
                            IsDeleted = false,
                            LocationId = new Guid("ae187b67-abd1-4c1a-8590-6a22c6de4b17"),
                            Make = "Volkswagen",
                            Model = "Golf",
                            Price = 12500m,
                            PurposeId = new Guid("f140b03d-b93a-47e6-a58a-346fad8599ad"),
                            Seats = 5,
                            TankCapacity = 50,
                            TypeId = new Guid("912d4786-5ce9-4dc7-8da8-47ce8fb72bef"),
                            Year = "2013"
                        },
                        new
                        {
                            Id = new Guid("c57cbde2-3556-49b0-9cf6-34e0525593ad"),
                            CategoryId = new Guid("939d5a93-8d55-4ec3-b3ac-39a36cd1ff29"),
                            Cubage = 1400,
                            Doors = 4,
                            FuelType = "Дизел",
                            GearBox = "Ръчни",
                            HorsePower = 90,
                            ImageUrl = "https://aaaautoeuimg.vshcdn.net/thumb/900482724_640x480x95.jpg?58802",
                            IsDeleted = false,
                            LocationId = new Guid("84a3dfe2-4c08-4e18-9156-7452e556c1dd"),
                            Make = "Toyota",
                            Model = "Auris",
                            Price = 13000m,
                            PurposeId = new Guid("adf8cee2-4a4f-430a-99a4-b80fcda4d62d"),
                            Seats = 5,
                            TankCapacity = 50,
                            TypeId = new Guid("912d4786-5ce9-4dc7-8da8-47ce8fb72bef"),
                            Year = "2013"
                        },
                        new
                        {
                            Id = new Guid("50150df2-d531-4f8c-a6c7-b1bf1b8dc76b"),
                            CategoryId = new Guid("2fc4c7e6-cad0-4190-95b5-78a7420a1631"),
                            Cubage = 1500,
                            Doors = 4,
                            FuelType = "Дизел",
                            GearBox = "Автоматична",
                            HorsePower = 110,
                            ImageUrl = "https://autobild.bg/wp-content/uploads/2021/09/IMG_5826.jpg",
                            IsDeleted = false,
                            LocationId = new Guid("48141d40-a443-4edf-aa93-80a12db8690e"),
                            Make = "Opel",
                            Model = "Mokka",
                            Price = 23000m,
                            PurposeId = new Guid("8acdd8a8-ffaa-425d-934e-d13deaea1836"),
                            Seats = 5,
                            TankCapacity = 45,
                            TypeId = new Guid("912d4786-5ce9-4dc7-8da8-47ce8fb72bef"),
                            Year = "2020"
                        },
                        new
                        {
                            Id = new Guid("6b18a4a3-893d-4104-9a82-fcdac5398865"),
                            CategoryId = new Guid("a2a6b9be-e626-4d0d-9152-8797da33402f"),
                            Cubage = 2000,
                            Doors = 4,
                            FuelType = "Дизел",
                            GearBox = "Автоматична",
                            HorsePower = 140,
                            ImageUrl = "https://cdn3.riastatic.com/photos/ir/new/auto/photo/volkswagen_sharan__344776878-620x415x70.jpg",
                            IsDeleted = false,
                            LocationId = new Guid("95d16d5b-0edb-46ed-9abc-822545a05860"),
                            Make = "Volkswagen",
                            Model = "Sharan",
                            Price = 15000m,
                            PurposeId = new Guid("f140b03d-b93a-47e6-a58a-346fad8599ad"),
                            Seats = 5,
                            TankCapacity = 70,
                            TypeId = new Guid("912d4786-5ce9-4dc7-8da8-47ce8fb72bef"),
                            Year = "2012"
                        },
                        new
                        {
                            Id = new Guid("9f7db9e9-bb94-48d9-a670-9fa20affc1e5"),
                            CategoryId = new Guid("bd91bf4e-67a8-40b4-a992-ae31c76df3a1"),
                            Cubage = 1200,
                            Doors = 4,
                            FuelType = "Бензин",
                            GearBox = "Автоматична",
                            HorsePower = 110,
                            ImageUrl = "https://cloud.leparking.fr/2021/04/27/00/23/peugeot-208-peugeot-208-2015-67000km-garantie-inconnu_8085850837.jpg",
                            IsDeleted = false,
                            LocationId = new Guid("3cb2b945-5fb2-4489-805e-b879154902a6"),
                            Make = "Peugeot",
                            Model = "208",
                            Price = 9000m,
                            PurposeId = new Guid("f140b03d-b93a-47e6-a58a-346fad8599ad"),
                            Seats = 5,
                            TankCapacity = 50,
                            TypeId = new Guid("912d4786-5ce9-4dc7-8da8-47ce8fb72bef"),
                            Year = "2015"
                        });
                });

            modelBuilder.Entity("CarDealership.Data.Models.VehicleCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("VehiclesCategories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2d3352f2-6656-4527-821a-5a071115e5c0"),
                            Name = "Седан"
                        },
                        new
                        {
                            Id = new Guid("cab32a10-483b-468c-a688-e470b675cfe0"),
                            Name = "Комби"
                        },
                        new
                        {
                            Id = new Guid("8201de79-e529-46b0-adff-d34fbc8e10dd"),
                            Name = "Кабрио"
                        },
                        new
                        {
                            Id = new Guid("3c369b93-c75b-4ae2-b86a-6c40d959c1cb"),
                            Name = "Хечбег"
                        },
                        new
                        {
                            Id = new Guid("1a4ef7c6-1eba-4af7-8642-bd6e3198b590"),
                            Name = "Ван"
                        },
                        new
                        {
                            Id = new Guid("72a54e73-46de-4fa2-8fdb-e50d4e5edc42"),
                            Name = "Пикап"
                        },
                        new
                        {
                            Id = new Guid("bfb94ed7-b3ff-49a7-a501-a4e982718d4c"),
                            Name = "Купе"
                        },
                        new
                        {
                            Id = new Guid("8efe5464-8cb7-4262-a0ba-9473ded5e770"),
                            Name = "Джип"
                        },
                        new
                        {
                            Id = new Guid("638c691b-2479-4d0a-ad37-5c644dac887e"),
                            Name = "Камион"
                        },
                        new
                        {
                            Id = new Guid("1b920c99-d020-45f9-a257-2038debfbf56"),
                            Name = "Бус"
                        });
                });

            modelBuilder.Entity("CarDealership.Data.Models.VehiclePurpose", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("VehiclesPurposes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6fa33937-28ac-40f2-aa82-7ea19b03ffb6"),
                            Name = "Икономичен"
                        },
                        new
                        {
                            Id = new Guid("d0b4bd75-4832-49d3-bc1d-d379cd87ff86"),
                            Name = "Икономичен Комби"
                        },
                        new
                        {
                            Id = new Guid("663e100c-b96c-4a3b-a071-d7434b875b73"),
                            Name = "Компактен"
                        },
                        new
                        {
                            Id = new Guid("a9c0e108-df50-4344-ab1c-3882f17c1508"),
                            Name = "Стандартен"
                        },
                        new
                        {
                            Id = new Guid("2e5d61c5-56b6-40b9-a1a3-509b20bb4e02"),
                            Name = "Стандартен Комби"
                        },
                        new
                        {
                            Id = new Guid("d04d83b4-384d-414d-a7f1-18917ffd3c9a"),
                            Name = "Голям"
                        },
                        new
                        {
                            Id = new Guid("5d0937d8-b321-4af0-89a2-8a3befa1f420"),
                            Name = "Луксозен"
                        });
                });

            modelBuilder.Entity("CarDealership.Data.Models.VehicleType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("VehiclesTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3676ec07-2661-45c6-858d-46ce33a4eafa"),
                            Name = "Автомобил"
                        },
                        new
                        {
                            Id = new Guid("41a9af0c-b8b6-4915-9ac2-a9ef65ad68c7"),
                            Name = "Камион"
                        },
                        new
                        {
                            Id = new Guid("86efcd4f-7299-49e4-a06e-5f1f4898fd13"),
                            Name = "Бус"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("CarDealership.Data.Models.Vehicle", b =>
                {
                    b.HasOne("CarDealership.Data.Models.VehicleCategory", "VehicleCategory")
                        .WithMany("Vehicles")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarDealership.Data.Models.Location", "Location")
                        .WithMany("Vehicles")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarDealership.Data.Models.VehiclePurpose", "Purpose")
                        .WithMany("Vehicles")
                        .HasForeignKey("PurposeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarDealership.Data.Models.VehicleType", "VehicleType")
                        .WithMany("Vehicles")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");

                    b.Navigation("Purpose");

                    b.Navigation("VehicleCategory");

                    b.Navigation("VehicleType");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("CarDealership.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("CarDealership.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarDealership.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("CarDealership.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CarDealership.Data.Models.Location", b =>
                {
                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("CarDealership.Data.Models.VehicleCategory", b =>
                {
                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("CarDealership.Data.Models.VehiclePurpose", b =>
                {
                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("CarDealership.Data.Models.VehicleType", b =>
                {
                    b.Navigation("Vehicles");
                });
#pragma warning restore 612, 618
        }
    }
}
