@using CarDealership.Web.ViewModels.Vehicle
@model VehicleAllViewModel

@{
    ViewBag.Title = "Search Vehicles";
}

<div class="container my-5">
    <h2 class="text-center text-primary">@ViewBag.Title</h2>
    <hr />

    <form method="get" class="mb-4">
        <div class="row g-3">
            <div class="col-md-3">
                <label asp-for="Make" class="form-label">Make</label>
                <select asp-for="Make" class="form-select">
                    <option value="">All Makes</option>
                    @foreach (var make in Model.Makes)
                    {
                        <option value="@make">@make</option>
                    }
                </select>
            </div>
            <div class="col-md-3">
                <label asp-for="Model" class="form-label">Model</label>
                <select asp-for="Model" class="form-select">
                    <option value="">All Models</option>
                    @foreach (var modl in Model.Models)
                    {
                        <option value="@modl">@modl</option>
                    }
                </select>
            </div>
            <div class="col-md-3">
                <label asp-for="Type" class="form-label">Type</label>
                <select asp-for="Type" class="form-select">
                    <option value="">All Types</option>
                    @foreach (var type in Model.Types)
                    {
                        <option value="@type">@type</option>
                    }
                </select>
            </div>
            <div class="col-md-3">
                <label asp-for="Category" class="form-label">Category</label>
                <select asp-for="Category" class="form-select">
                    <option value="">All Categories</option>
                    @foreach (var category in Model.Categories)
                    {
                        <option value="@category">@category</option>
                    }
                </select>
            </div>
        </div>

        <div class="row g-3 mt-3">
            <div class="col-md-3">
                <label asp-for="LocatedIn" class="form-label">Location</label>
                <select asp-for="LocatedIn" class="form-select">
                    <option value="">All Locations</option>
                    @foreach (var location in Model.LocatedIns)
                    {
                        <option value="@location">@location</option>
                    }
                </select>
            </div>
            <div class="col-md-3">
                <label asp-for="Search" class="form-label">Search</label>
                <input asp-for="Search" class="form-control" placeholder="Search by keyword" />
            </div>
            <div class="col-md-3">
                <label asp-for="Sorting" class="form-label">Sort By</label>
                <select asp-for="Sorting" class="form-select">
                    <option value="0">Price: High to Low</option>
                    <option value="1">Price: Low to High</option>
                    <option value="2">Newest First</option>
                </select>
            </div>
            <div class="col-md-3 d-flex align-items-end">
                <button type="submit" class="btn btn-primary w-100">Search</button>
            </div>
        </div>
    </form>

    <hr />

    @if (!Model.Vehicles.Any())
    {
        <h4 class="text-center text-danger">No vehicles found matching your criteria.</h4>
    }
    else
    {
        <div class="row row-cols-1 row-cols-md-3 g-4">
            @foreach (var vehicle in Model.Vehicles)
            {
                <partial name="_VehiclePartial" model="@vehicle" />
            }
        </div>
    }

    <div class="mt-4 d-flex justify-content-between">
        @{
            var previousPage = Model.CurrentPage > 1 ? Model.CurrentPage - 1 : 1;
            var maxPage = (int)Math.Ceiling((double)Model.VehiclesCount / VehicleAllViewModel.VehicleOnPage);
        }

        <a class="btn btn-outline-primary @(Model.CurrentPage == 1 ? "disabled" : "")"
           asp-route-currentPage="@previousPage"
           asp-route-search="@Model.Search"
           asp-route-sorting="@((int)Model.Sorting)">
            &laquo; Previous
        </a>

        <a class="btn btn-outline-primary @(Model.CurrentPage == maxPage ? "disabled" : "")"
           asp-route-currentPage="@(Model.CurrentPage + 1)"
           asp-route-search="@Model.Search"
           asp-route-sorting="@((int)Model.Sorting)">
            Next &raquo;
        </a>
    </div>
</div>

